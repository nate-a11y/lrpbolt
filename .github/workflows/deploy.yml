name: Build & Deploy LRP

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Fail if required secrets missing
        run: |
          required=(
            VITE_CALENDAR_API_KEY VITE_CALENDAR_ID
            VITE_FIREBASE_API_KEY VITE_FIREBASE_AUTH_DOMAIN VITE_FIREBASE_PROJECT_ID
            VITE_FIREBASE_STORAGE_BUCKET VITE_FIREBASE_MESSAGING_SENDER_ID VITE_FIREBASE_APP_ID
            VITE_GOOGLE_CLIENT_ID VITE_API_BASE_URL VITE_API_SECRET_KEY VITE_TIME_LOG_CSV
            VITE_DROP_DAILY_URL
          )
          for k in "${required[@]}"; do
            v="${!k}"
            if [ -z "${!k}" ]; then echo "::error::Missing secret $k"; exit 1; fi
          done
        env:
          VITE_CALENDAR_API_KEY: ${{ secrets.VITE_CALENDAR_API_KEY }}
          VITE_CALENDAR_ID: ${{ secrets.VITE_CALENDAR_ID }}
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_API_SECRET_KEY: ${{ secrets.VITE_API_SECRET_KEY }}
          VITE_TIME_LOG_CSV: ${{ secrets.VITE_TIME_LOG_CSV }}
          VITE_DROP_DAILY_URL: ${{ secrets.VITE_DROP_DAILY_URL }}

      - name: Create .env from GitHub Secrets
        run: |
          cat > .env << 'EOF2'
          VITE_CALENDAR_API_KEY=${{ secrets.VITE_CALENDAR_API_KEY }}
          VITE_CALENDAR_ID=${{ secrets.VITE_CALENDAR_ID }}
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }}
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          VITE_API_SECRET_KEY=${{ secrets.VITE_API_SECRET_KEY }}
          VITE_TIME_LOG_CSV=${{ secrets.VITE_TIME_LOG_CSV }}
          VITE_DROP_DAILY_URL=${{ secrets.VITE_DROP_DAILY_URL }}
          EOF2

      - name: Install & build web
        run: |
          npm ci
          npm run build

      - name: Deploy to Hostinger via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4
        with:
          server: ${{ secrets.HOSTINGER_FTP_HOST }}
          username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
          password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
          local-dir: dist/
          server-dir: ${{ secrets.HOSTINGER_REMOTE_PATH }}

  functions:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Write service account key
        run: |
          mkdir -p $HOME/.gcloud
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}' > $HOME/.gcloud/key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/.gcloud/key.json" >> $GITHUB_ENV

      - name: Export MANUAL_DROP_TOKEN
        run: echo "MANUAL_DROP_TOKEN=${{ secrets.MANUAL_DROP_TOKEN }}" >> $GITHUB_ENV

      - name: Install & deploy functions (set cleanup policy if needed)
        working-directory: functions
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          npm ci
          npx firebase deploy --only functions --project ${{ secrets.FIREBASE_PROJECT_ID }} --force || true
          # Ensure artifact cleanup policy (14 days) - idempotent
          npx firebase functions:artifacts:setpolicy --location us-central1 --days 14 || true
